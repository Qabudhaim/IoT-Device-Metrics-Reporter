services:
  web:
    build:
      context: ./Server
    command: gunicorn Server.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - ./Server:/app
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
    restart: unless-stopped

  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - ./.env
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  agent:
    build:
      context: ./Agent
    network_mode: host
    env_file:
      - ./.env
    depends_on:
      - web
    volumes:
      - ./Agent/.log:/app/.log
    restart: unless-stopped

volumes:
  postgres_data:
